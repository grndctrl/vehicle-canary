/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import { useGLTF } from '@react-three/drei';
import * as THREE from 'three';
import { GLTF } from 'three-stdlib';

type GLTFResult = GLTF & {
  nodes: {
    Mesh_wheelTruck: THREE.Mesh;
    Mesh_wheelTruck_1: THREE.Mesh;
    Mesh_wheelTruck_2: THREE.Mesh;
  };
  materials: {
    carTire: THREE.MeshStandardMaterial;
    _defaultMat: THREE.MeshStandardMaterial;
    plastic: THREE.MeshStandardMaterial;
  };
};

export default function Wheel(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('/assets/wheelTruck.glb') as GLTFResult;
  return (
    <group {...props} dispose={null}>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Mesh_wheelTruck.geometry}
        material={materials.carTire}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Mesh_wheelTruck_1.geometry}
        material={materials._defaultMat}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Mesh_wheelTruck_2.geometry}
        material={materials.plastic}
      />
    </group>
  );
}

useGLTF.preload('/assets/wheelTruck.glb');
